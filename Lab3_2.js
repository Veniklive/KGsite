(function (cjs, an) {

var p; // shortcut to reference prototypes
var lib={};var ss={};var img={};
lib.ssMetadata = [
		{name:"Lab3_2_atlas_1", frames: [[0,0,360,360]]}
];


(lib.AnMovieClip = function(){
	this.actionFrames = [];
	this.ignorePause = false;
	this.gotoAndPlay = function(positionOrLabel){
		cjs.MovieClip.prototype.gotoAndPlay.call(this,positionOrLabel);
	}
	this.play = function(){
		cjs.MovieClip.prototype.play.call(this);
	}
	this.gotoAndStop = function(positionOrLabel){
		cjs.MovieClip.prototype.gotoAndStop.call(this,positionOrLabel);
	}
	this.stop = function(){
		cjs.MovieClip.prototype.stop.call(this);
	}
}).prototype = p = new cjs.MovieClip();
// symbols:



(lib.CachedBmp_1 = function() {
	this.initialize(ss["Lab3_2_atlas_1"]);
	this.gotoAndStop(0);
}).prototype = p = new cjs.Sprite();
// helper functions:

function mc_symbol_clone() {
	var clone = this._cloneProps(new this.constructor(this.mode, this.startPosition, this.loop, this.reversed));
	clone.gotoAndStop(this.currentFrame);
	clone.paused = this.paused;
	clone.framerate = this.framerate;
	return clone;
}

function getMCSymbolPrototype(symbol, nominalBounds, frameBounds) {
	var prototype = cjs.extend(symbol, cjs.MovieClip);
	prototype.clone = mc_symbol_clone;
	prototype.nominalBounds = nominalBounds;
	prototype.frameBounds = frameBounds;
	return prototype;
	}


(lib.Шар = function(mode,startPosition,loop,reversed) {
if (loop == null) { loop = true; }
if (reversed == null) { reversed = false; }
	var props = new Object();
	props.mode = mode;
	props.startPosition = startPosition;
	props.labels = {};
	props.loop = loop;
	props.reversed = reversed;
	cjs.MovieClip.apply(this,[props]);

	// Слой_1
	this.instance = new lib.CachedBmp_1();
	this.instance.setTransform(-0.5,-0.5,0.5,0.5);

	this.timeline.addTween(cjs.Tween.get(this.instance).wait(1));

	this._renderFirstFrame();

}).prototype = getMCSymbolPrototype(lib.Шар, new cjs.Rectangle(-0.5,-0.5,180,180), null);


// stage content:
(lib.Lab3_2 = function(mode,startPosition,loop,reversed) {
if (loop == null) { loop = true; }
if (reversed == null) { reversed = false; }
	var props = new Object();
	props.mode = mode;
	props.startPosition = startPosition;
	props.labels = {};
	props.loop = loop;
	props.reversed = reversed;
	cjs.MovieClip.apply(this,[props]);

	// Ball
	this.instance = new lib.Шар();
	this.instance.setTransform(3.55,191.1,1,1,0,0,0,89.5,89.5);

	this.timeline.addTween(cjs.Tween.get(this.instance).to({rotation:360,guide:{path:[3.6,191.2,4.2,190.6,4.7,189.9,5,189.4,5.2,188.9,5.4,188.3,5.6,187.7,5.8,187.1,6.1,186.6,6.6,185.9,7.2,185.3,7.7,184.7,8.3,184.2,8.9,183.6,9.5,183,10.1,182.4,10.7,181.8,10.9,181.2,11.1,180.6,11.3,180.1,11.5,179.5,12.2,178.9,13.1,178.3,14,177.7,14.9,177.1,15.8,176.5,16.5,175.9,17.1,175.4,17.7,174.8,18.3,174.2,18.9,173.6,20.1,173.2,21.2,172.8,22,172.4,22.8,172,23.4,171.5,23.8,170.8,24.2,170.3,24.3,169.7,24.4,169.1,24.4,168.5,24.4,167.9,24.6,167.8,26.1,167,27.9,166.5,28.5,166.4,29,166.2,29.4,165.8,29.7,165.3,30,164.8,30.2,164.2,32,163.6,33.7,163.1,34.5,162.5,35.3,161.8,35.9,161.3,36.5,160.7,37.6,160.1,38.8,159.5,39.6,159,40.4,158.4,41.2,157.8,42,157.3,43.1,156.6,44.3,156,44.9,155.4,45.5,154.8,48.4,154.5,51.3,154.1,52.1,153.7,52.9,153.4,54.4,152.9,56,152.4,56.8,152.1,57.6,151.7,63.6,151.3,69.7,150.9,70.7,150.5,71.6,150.2,85.7,150,99.8,150.2,100.2,150.2,100.6,150.5,101.4,151.1,102.2,151.6,103.3,152.3,104.4,152.9,106.4,154.1,108.3,155.4,109,155.8,109.6,156.4,110.5,157,111.6,157.5,112.9,158.2,114.2,158.8,115.2,159.3,116.2,159.9,116.8,160.5,117.4,161.1,118,161.7,118.5,162.3,119.1,162.9,119.7,163.4,120.3,164,120.8,164.7,121.1,165.2,121.2,165.8,121.3,166.4,121.3,167,121.5,167.6,121.8,168,122.3,168.7,122.8,169.3,124,169.9,125.1,170.7,125.6,171.1,126,171.7,126.7,174,128.9,175.5,131.3,177.1,132.4,179.8,133.3,181.8,134.9,183.4,135.5,184,136.1,184.6,137.1,185.1,137.9,185.9,138.3,186.3,138.4,186.9,138.5,187.5,138.5,188.1,138.9,188.7,139.3,189.2,140.2,190.4,141.2,191.6,141.6,192.2,142,192.8,142.4,193.3,142.8,193.9,143.2,194.5,143.6,195.1,144,195.7,144.3,196.3,144.5,196.9,144.7,197.4,144.9,198,145.2,198.6,145.5,199.2,145.8,199.8,146.1,200.4,146.3,201,146.5,201.6,146.7,202.1,146.9,202.7,147.1,203.3,147.7,203.9,148.3,204.4,149,205.1,149.8,205.7,150.4,206.2,151,206.8,151,207.4,151.1,208,151.2,208.6,151.4,209.2,152,209.8,152.6,210.3,152.9,210.9,153.3,211.6,153.5,212.1,153.8,212.7,154.1,213.3,154.5,213.9,155.1,214.5,155.7,215,156.3,215.6,156.7,216.3,157,216.8,157.2,217.4,157.2,218,157.2,218.6,157.2,219.1,157.2,219.7,157.2,220.3,157.2,220.9,157.6,221.5,158.1,222,158.8,222.7,159.6,223.2,160.4,223.8,161.1,224.5,161.5,225,161.9,225.6,161.9,226.2,162,226.7,162.1,227.3,162.3,227.9,162.7,228.5,163,229.1,163.3,229.7,163.5,230.3,163.7,230.9,163.9,231.5,164.1,232,164.3,232.6,164.7,233.2,165.1,233.8,165.4,234.4,165.8,235,166,235.6,166.2,236.1,166.4,236.7,166.6,237.3,166.8,237.9,167,238.5,167.4,239.1,167.8,239.7,168.2,240.2,168.6,240.8,169,241.4,169.4,242,169.6,242.6,169.7,243.2,169.9,243.8,170.1,244.4,170.3,244.9,170.5,245.5,171.1,246.1,171.7,246.7,171.9,247.3,172.2,247.8,172.5,248.5,172.8,249.1,173.1,249.6,173.3,250.2,173.7,250.8,174,251.4,174.2,252,174.3,252.6,174.4,253.1,174.4,253.7,175,254.9,175.6,256.1,176.4,257.8,177.2,259.6,177.8,260.8,178.3,262,178.7,263.1,179.2,264.2,179.5,264.9,179.9,265.5,180.7,266,181.4,266.7,181.9,267.2,182.3,267.8,183,269.6,183.7,271.4,185,274.8,186.2,278.4,187,280.8,188,283.1,188.9,285.4,189.8,287.7,190.1,288.3,190.5,288.9,191,289.5,191.5,290.2,191.8,290.7,192,291.3,192.2,291.8,192.4,292.4,192.6,293,192.8,293.6,193.2,294.2,193.6,294.8,194,295.4,194.3,296,194.6,296.5,194.8,297.1,194.8,297.7,194.8,298.3,194.8,298.9,194.8,299.5,194.8,300,194.8,300.6,194.8,301.2,194.9,301.8,195,302.4,195.2,303,195.3,303.6,195.6,304.1,196.5,305.9,197.6,307.6,198.3,308.8,199.1,310,199.8,311.2,200.5,312.4,200.8,312.9,201,313.5,201,314.1,201.1,314.7,201.2,315.3,201.3,315.9,201.4,316.5,201.4,317,201.6,317.6,201.9,318.2,202.2,318.8,202.6,319.4,202.8,320.6,203.1,321.6,203.4,322.8,203.8,324,204.3,325.7,205,327.5,205.5,328.7,206,329.9,206.5,331,206.9,332.2,207.1,332.8,207.3,333.4,207.3,334.5,207.3,335.7,207.3,336.3,207.3,336.9,207.3,337.5,207.4,338,207.5,338.6,207.6,339.2,207.7,339.8,207.8,340.4,207.9,341,208,341.6,208.6,342.7,209.3,343.9,210.2,345.7,211.1,347.4,211.8,348.6,212.3,349.8,212.9,350.9,213.3,352.2,213.5,352.7,213.5,353.3,213.5,355.7,214.1,357.9,214.5,359.8,215.2,361.5,215.9,363.3,216.7,365,217.2,366.2,217.8,367.4,218,368,218.2,368.5,218.2,369.7,218.3,370.9,218.4,372.1,218.7,373.2,219.2,375,219.7,376.8,220,377.9,220.3,379.1,220.6,380.3,220.9,381.4,221.1,382,221.3,382.6,221.3,383.2,221.3,383.8,221.3,384.4,221.3,385,221.7,386.1,222.1,387.3,222.7,389.1,223.4,390.8,223.9,392,224.5,393.2,225.1,394.3,225.6,395.5,225.8,396.1,226,396.7,226,397.3,226,397.9,226,398.4,226,399,226,399.6,226,400.2,226,400.8,226.1,401.4,226.2,402,226.4,402.5,226.8,403.1,227.2,403.7,227.6,404.3,228,404.9,228.2,405.5,228.4,406.1,228.6,406.6,228.8,407.2,229,407.8,229.2,408.4,229.2,409,229.2,409.6,229.2,410.2,229.3,410.7,229.4,411.3,229.5,411.9,229.9,412.5,230.4,413,230.9,413.7,231.4,414.3,231.9,414.9,232.3,415.4,232.3,416,232.3,416.6,232.3,417.2,232.3,417.8,232.3,418.4,232.3,419,232.3,419.5,232.4,420.1,232.5,420.7,232.7,421.3,233.1,421.9,233.5,422.5,233.8,423.1,234.2,423.6,234.4,424.2,234.6,424.8,234.8,425.4,235,426,235.2,426.6,235.3,427.2,235.4,427.7,235.5,428.3,235.6,428.9,235.8,429.5,236.4,430.1,236.9,430.7,237.4,431.3,237.7,431.9,237.9,432.4,238.1,433,238.3,434.2,238.5,435.4,238.5,436,238.5,436.5,238.5,437.1,238.5,437.7,238.5,438.3,238.5,438.9,238.5,439.5,238.5,440.1,238.5,440.6,238.5,441.2,238.9,441.8,239.3,442.4,239.7,443,240.1,443.6,240.1,444.2,240.2,444.7,240.3,445.3,240.5,445.9,240.7,446.5,240.9,447.1,241.5,447.7,241.9,448.4,242.2,448.9,242.4,449.4,242.8,450,243,450.7,243.2,451.2,243.3,451.8,243.4,452.4,243.6,453,243.8,453.5,244.1,454.1,244.4,454.7,244.6,455.4,244.8,455.9,244.8,456.5,244.8,457.1,244.8,457.6,244.8,458.2,244.8,458.8,244.8,459.4,244.8,460,244.8,460.6,244.9,461.2,245,461.8,245.2,462.3,245.4,462.9,245.6,463.5,246,464.1,246.4,464.7,246.7,465.3,247.1,465.9,247.5,466.4,247.9,467,247.9,467.6,248,468.2,248.1,468.8,248.3,469.4,248.5,470,248.8,470.5,249.1,471.1,249.5,471.7,249.5,472.3,249.5,472.9,249.5,473.5,249.5,474.1,249.7,474.7,249.9,475.2,250.1,475.8,250.3,476.4,250.5,477,250.7,477.6,250.8,478.2,251,478.8,251,479.3,251,479.9,251,480.5,251,481.1,251.2,481.7,251.4,482.3,251.6,482.9,251.8,483.4,252,484,252.2,484.6,252.6,485.2,253,485.8,253.4,486.4,253.7,487,254,487.5,254.2,488.1,254.4,488.7,254.5,489.3,254.6,489.9,254.6,490.5,254.8,491.1,255,491.6,255.3,492.2,255.7,492.8,255.7,493.4,255.8,494,255.9,494.6,256.1,495.2,256.3,495.8,256.6,496.3,256.9,496.9,257.1,497.6,257.3,498.1,257.3,498.7,257.3,499.3,257.3,499.9,257.3,500.4,257.3,501,257.3,501.6,257.3,502.2,257.3,502.8,257.3,503.4,257.9,505.2,258.5,506.9,259.1,508.7,259.9,510.3,261,512.6,261.6,515.1,262,517,263,518.7,263.4,519.2,263.5,519.8,263.5,520.4,263.5,521,263.5,521.6,263.5,522.1,263.5,522.7,263.5,523.3,263.7,523.9,263.9,524.5,264.1,525.1,264.3,525.7,264.5,526.2,264.7,526.8,265.1,527.4,265.5,528,265.9,528.6,266.2,529.2,266.5,529.8,266.6,530.4,266.7,530.9,266.7,531.5,266.9,532.1,267.2,532.6,267.7,533.3,268.2,533.9,268.8,534.4,269.3,535.1,269.6,535.6,269.8,536.2,269.8,536.8,269.8,537.4,269.8,538,269.8,538.6,269.8,539.1,269.8,539.7,269.8,540.3,269.9,540.9,270,541.5,270.2,542.1,270.4,542.7,270.7,543.2,271,543.8,271.4,544.4,271.8,545,272.1,545.6,272.5,546.2,272.9,546.8,272.9,547.3,272.9,547.9,272.9,548.5,272.9,549.1,272.9,549.7,272.9,550.3,272.9,550.9,273,551.4,273.1,552,273.3,552.6,273.9,553.2,274.5,553.8,275.1,554.4,275.5,555.1,275.9,555.6,276.1,556.1,276.1,556.7,276.1,557.3,276.1,557.9,276.1,558.5,276.1,559.1,276.2,559.6,276.3,560.2,276.4,560.8,277,562,277.5,563.2,278.2,564.9,278.9,566.7,279.4,567.9,279.9,569.1,280.4,570.2,280.6,571.4,280.7,572,280.7,572.6,280.7,573.1,280.9,573.7,281.1,574.3,281.5,574.9,281.9,575.5,282.3,576.1,282.3,576.7,282.3,577.2,282.3,577.8,282.3,578.4,282.5,579,282.7,579.6,282.9,580.2,283.1,580.8,283.3,581.3,283.5,581.9,283.7,582.5,283.9,583.1,283.9,583.7,283.9,584.3,283.9,584.9,283.9,585.5,283.9,586,283.9,586.6,283.9,587.2,283.9,587.8,284.3,588.4,284.7,589,285,589.6,285.5,590.1,286,590.7,286.6,591.3,286.8,591.9,287,592.5,287.2,593.1,287.5,593.6,287.8,594.2,288.1,594.9,288.4,595.4,288.6,596,288.6,597.2,288.6,598.4,288.6,599.5,288.6,600.7,288.6,601.3,288.6,601.9,288.6,602.5,288.7,603,288.8,603.6,289,604.2,289.3,604.8,289.7,605.4,289.9,606,290,606.6,290.1,607.1,290.1,607.7,290.1,608.3,290.2,608.9,290.3,609.5,290.5,610.1,290.7,610.7,291,611.2,291.3,611.8,291.7,612.4,291.7,613,291.8,613.6,291.9,614.2,292.2,614.7,292.5,615.4,292.9,615.9,293.4,616.5,294,617.2,294.4,617.7,294.8,618.3,294.8,618.9,294.8,619.5,294.8,620,294.8,620.6,294.8,621.2,294.8,621.8,294.8,622.4,294.9,623,295,623.6,295.2,624.1,295.4,624.7,295.7,625.3,296,625.9,296.4,626.5,296.4,627.1,296.5,627.6,296.6,628.3,296.8,628.8,297.2,629.4,297.5,630,297.7,630.6,297.9,631.2,298.1,631.8,298.3,632.4,298.9,632.9,299.5,633.5,301.3,633.7,303,633.9,303.8,633.5,304.5,633,305,632.5,305.4,632,305.6,631.4,305.7,630.8,305.8,630.2,305.8,629.6,306.7,629,307.7,628.4,308.5,627.9,309.2,627.2,309.9,626.7,310.4,626.1,311.4,625.5,312.4,624.9,313.2,624.3,314,623.8,314.9,623.4,315.9,623,316.5,622.8,317,622.5,317.5,622.2,317.9,621.8,318.5,621.2,319,620.6,320.4,620.2,321.8,619.8,322.4,619.7,323,619.5,323.3,619.1,323.6,618.6,323.9,618.1,324.1,617.5,326.5,616.9,328.8,616.3,329.4,615.7,329.9,615.1,330.2,614.6,330.4,614,330.6,613.4,331,613.1,331.8,612.4,332.7,612.1,333.3,611.8,333.9,611.6,334.5,611.2,335.1,610.9,335.7,610.3,336.2,609.7,337.4,609.1,338.6,608.5,339.6,607.9,340.6,607.4,341.7,606.8,342.9,606.2,343.5,605.6,344.1,605,345.6,604.6,347.2,604.2,347.8,604,348.4,603.8,348.8,603.4,349.1,603,349.7,602.5,350.3,601.9,351.7,601.5,353,601.1,353.6,600.9,354.2,600.7,354.6,600.3,354.9,599.8,355.2,599.3,355.4,598.7,357.5,598.4,359.7,598,360.5,597.6,361.3,597.2,361.8,596.6,362.4,596,363,595.4,363.6,594.8,364.8,594.2,366,593.8,369.3,592.7,372.6,591.7,373.2,591.5,373.8,591.3,374,590.9,374.3,590.6,374.9,589.9,375.7,589.4,377.1,589,378.4,588.5,379.2,588.2,380,587.8,382,587.4,383.9,587,384.7,586.6,385.5,586.2,388.2,585.8,390.9,585.4,391.5,585.3,392.1,585.1,392.5,584.7,393,584.4,394.1,583.7,395.3,583.2,396.2,582.7,397.2,582.3,398,581.9,398.8,581.5,403.5,581.2,408.2,580.8,408.9,580.4,409.7,580,452.7,579.8,495.7,579.6,496.1,580,496.6,580.1,498.4,580.8,500.4,581.3,500.6,581.3,500.8,581.5,501.4,581.9,502,582.3,503.1,582.9,504.3,583.5,506.7,584.3,509.1,584.7,512.7,585.5,516.4,585.8,516.8,586,517.2,586.2,518.2,586.6,519.1,587.1,520.3,587.6,521.5,588.2,526.2,588.7,530.6,590.3,535.8,592.2,540.6,594.9,541.6,595.4,542.6,596,544.8,596.4,546.9,596.8,547.1,597,547.3,597.1,548.1,597.6,548.8,598,549.9,598.5,551.1,599.1,552.3,599.7,553.5,600.3,554,600.9,554.7,601.4,555.4,602.1,556.2,602.6,557.2,603.2,558.1,603.8,560.3,604.2,562.4,604.9,562.8,605,563.2,605.4,563.4,606,563.6,606.6,563.8,607.1,564,607.7,564.6,608.3,565.2,608.9,566.2,609.5,567.2,610,568.5,610.7,569.9,611.2,570.3,611.8,570.7,612.3,571.4,613,572.2,613.5,573.2,614.2,574.2,614.8,574.8,615.4,575.3,615.9,575.7,616.5,576,617.2,576.3,617.7,576.5,618.3,577.1,618.9,577.7,619.5,578.9,620,580,620.7,580.8,621.2,581.6,621.8,582.2,622.4,582.8,623,583.4,623.6,583.9,624.1,585.1,624.7,586.3,625.3,586.9,625.9,587.5,626.5,588,627.1,588.6,627.7,589.2,628.3,589.8,628.8,591.9,629.2,594,629.9,594.5,630,594.9,630.4,595.3,631,595.8,631.4,596.8,632.2,598,632.8,599,633.3,600,633.9,600.5,634.5,601.1,635.1,601.7,635.7,602.3,636.3,603.5,636.8,604.7,637.4,605.8,637.8,607,638.2,608.4,638,609.5,637.4,609.9,637.2,610.1,636.7,610.3,636.1,610.5,635.5,611.5,634.3,612.6,633.2,615,630.7,617.9,628.9,620.5,627.3,622.7,625,623.2,624.3,623.8,623.8,625,623.4,626.1,622.9,626.9,622.6,627.7,622.1,628.5,621.6,629.3,621,629.5,620.4,629.7,619.9,630.1,619.3,630.4,618.7,631,618.1,631.6,617.5,632.6,616.9,633.6,616.3,634.6,615.7,635.4,615,635.9,614.6,636.3,614,636.7,613.4,637.2,613.1,639,612.2,641,611.6,641.8,611.1,642.4,610.3,642.8,609.9,643,609.3,643.3,608.7,643.9,608.5,647.7,606.8,650.4,603.5,652.5,601.1,655.4,599.7,656.2,599.3,657,598.7,658.6,598.4,660.1,597.8,662.1,597,664,595.9,666,594.8,667.9,593.6,668.7,593.1,669.5,592.5,674.2,592.1,678.1,589.7,680.1,588.6,682,587.3,682.8,586.8,683.6,586.2,686.3,585.8,689.1,585.4,689.7,585.3,690.2,585.1,690.8,584.7,691.4,584.2,692,583.7,692.6,583.1,695.3,582.7,698,582.2,698.6,582.1,699.2,581.9,700,581.5,700.8,581.1,701.6,580.6,702.4,580,705.3,579.6,708.2,579.2,711.1,577.9,714.1,576.9,719.6,575.1,725.4,574.3,726.4,574.1,727.4,573.7,735.2,573.3,743,572.9,743.8,572.6,744.6,572.2,748.1,571.8,751.6,571.4,752.4,571,753.2,570.6,770.8,570.4,788.3,570.2,789.1,570.6,789.9,570.9,791.5,571.4,793,571.9,793.6,572.2,794.2,572.6,797.9,572.9,801.6,573.6,802,573.7,802.4,574.1,803.4,574.7,804.2,575.4,804.8,575.9,805.3,576.3,806.1,577.1,807.1,577.6,808.1,578.2,809.1,578.8,812.8,579.2,816.5,579.6,818.6,580.6,820.7,581.6,822.9,582.7,825.1,583.9,826.1,584.5,827,585.1,830.2,585.5,833.3,586,833.5,586,833.7,586.2,835.4,587.2,837.2,588.3,838,588.8,838.7,589.5,839.7,590.5,840.8,591.6,841.5,592.3,842.3,592.9,842.5,593.5,842.8,594,843.3,594.6,843.8,595.2,844.4,595.8,845,596.4,845.4,597,845.7,597.6,846,598.2,846.3,598.7,846.6,599.3,847,599.9,847.4,600.5,847.8,601.1,848.1,601.7,848.5,602.3,848.9,602.8,849.3,603.4,850.1,604,850.7,604.7,851.1,605.2,851.3,605.8,851.5,606.4,851.7,606.9,851.9,607.5,852.2,608,852.6,608.7,853.2,609.3,853.8,609.9,854.4,610.5,855,611.1,855.6,611.6,856.2,612.2,856.7,612.8,857.1,613.4,857.4,614,857.7,614.6,858,615.1,858.3,615.7,858.7,616.3,859.7,616.9,860.7,617.5,860.8,618.1,861.2,618.5,862.8,620.4,864.6,622.2,866.9,624.5,869.3,626.8,871.2,628.6,872.9,630.6,873.2,631,873.2,631.6,873.5,632.2,874,632.6,874.7,633.3,875.5,633.9,876.5,634.5,877.5,635.1,881.4,635.1,885.3,635.1,885.9,634.5,886.4,633.9,886.6,633.3,886.8,632.7,887,632.2,887.2,631.6,887.8,631,888.4,630.4,889.4,629.8,890.4,629.2,890.9,628.6,891.5,628.1,892.1,627.5,892.7,626.9,897.1,624.3,901.5,621.8,904.3,620.2,907.2,618.7,908.3,618.1,909.5,617.5,912.2,616.9,915,616.3,916,615.7,916.9,615.2,917.3,614.6,917.7,614,918.1,613.4,918.5,612.8,919.5,612.4,920.4,612,921.2,611.6,922,611.2,931.2,610.9,940.4,610.5,941.4,610.1,942.3,609.7,975.6,606.8,1007.8,613.5,1022.9,616.7,1038.5,618.7,1040.7,620.1,1043.2,620.9,1045.7,621.8,1048.3,622.4,1050.8,623,1053.3,623.4,1053.9,623.8,1054.5,624.1,1055.7,624.7,1056.9,625.3,1057.4,625.9,1058,626.5,1058.6,627.1,1059.2,627.6,1060,628.3,1060.8,628.8,1062.7,629.2,1064.6,629.9,1065.1,630,1065.5,630.2,1067.4,630.8,1069.3,631.3,1069.6,631.4,1069.8,631.6,1070.1,632,1070.5,632.4,1071.1,632.9,1071.7,633.5,1073.7,633.9,1075.6,634.3,1075.8,634.5,1076,634.6,1076.8,635.1,1077.5,635.5,1078.5,636.1,1079.5,636.7,1081.1,637,1082.6,637.6,1082.8,637.6,1083,637.8,1083,638.2,1083.2,638.5,1083.6,639.2,1084.2,639.8,1086.6,640.6,1088.9,641.2,1091.6,641.9,1094.4,642.3,1094.8,642.3,1095.2,642.1,1095.7,641.5,1096.2,640.9,1096.5,640.4,1096.7,639.8]}},89).wait(1));

	this._renderFirstFrame();

}).prototype = p = new lib.AnMovieClip();
p.nominalBounds = new cjs.Rectangle(553.6,390.9,633.1999999999999,372.5);
// library properties:
lib.properties = {
	id: '3926B82C7FB92C45941684B0C2979273',
	width: 1280,
	height: 720,
	fps: 30,
	color: "#FFFFFF",
	opacity: 1.00,
	manifest: [
		{src:"images/Lab3_2_atlas_1.png?1684938508395", id:"Lab3_2_atlas_1"}
	],
	preloads: []
};



// bootstrap callback support:

(lib.Stage = function(canvas) {
	createjs.Stage.call(this, canvas);
}).prototype = p = new createjs.Stage();

p.setAutoPlay = function(autoPlay) {
	this.tickEnabled = autoPlay;
}
p.play = function() { this.tickEnabled = true; this.getChildAt(0).gotoAndPlay(this.getTimelinePosition()) }
p.stop = function(ms) { if(ms) this.seek(ms); this.tickEnabled = false; }
p.seek = function(ms) { this.tickEnabled = true; this.getChildAt(0).gotoAndStop(lib.properties.fps * ms / 1000); }
p.getDuration = function() { return this.getChildAt(0).totalFrames / lib.properties.fps * 1000; }

p.getTimelinePosition = function() { return this.getChildAt(0).currentFrame / lib.properties.fps * 1000; }

an.bootcompsLoaded = an.bootcompsLoaded || [];
if(!an.bootstrapListeners) {
	an.bootstrapListeners=[];
}

an.bootstrapCallback=function(fnCallback) {
	an.bootstrapListeners.push(fnCallback);
	if(an.bootcompsLoaded.length > 0) {
		for(var i=0; i<an.bootcompsLoaded.length; ++i) {
			fnCallback(an.bootcompsLoaded[i]);
		}
	}
};

an.compositions = an.compositions || {};
an.compositions['3926B82C7FB92C45941684B0C2979273'] = {
	getStage: function() { return exportRoot.stage; },
	getLibrary: function() { return lib; },
	getSpriteSheet: function() { return ss; },
	getImages: function() { return img; }
};

an.compositionLoaded = function(id) {
	an.bootcompsLoaded.push(id);
	for(var j=0; j<an.bootstrapListeners.length; j++) {
		an.bootstrapListeners[j](id);
	}
}

an.getComposition = function(id) {
	return an.compositions[id];
}


an.makeResponsive = function(isResp, respDim, isScale, scaleType, domContainers) {		
	var lastW, lastH, lastS=1;		
	window.addEventListener('resize', resizeCanvas);		
	resizeCanvas();		
	function resizeCanvas() {			
		var w = lib.properties.width, h = lib.properties.height;			
		var iw = window.innerWidth, ih=window.innerHeight;			
		var pRatio = window.devicePixelRatio || 1, xRatio=iw/w, yRatio=ih/h, sRatio=1;			
		if(isResp) {                
			if((respDim=='width'&&lastW==iw) || (respDim=='height'&&lastH==ih)) {                    
				sRatio = lastS;                
			}				
			else if(!isScale) {					
				if(iw<w || ih<h)						
					sRatio = Math.min(xRatio, yRatio);				
			}				
			else if(scaleType==1) {					
				sRatio = Math.min(xRatio, yRatio);				
			}				
			else if(scaleType==2) {					
				sRatio = Math.max(xRatio, yRatio);				
			}			
		}
		domContainers[0].width = w * pRatio * sRatio;			
		domContainers[0].height = h * pRatio * sRatio;
		domContainers.forEach(function(container) {				
			container.style.width = w * sRatio + 'px';				
			container.style.height = h * sRatio + 'px';			
		});
		stage.scaleX = pRatio*sRatio;			
		stage.scaleY = pRatio*sRatio;
		lastW = iw; lastH = ih; lastS = sRatio;            
		stage.tickOnUpdate = false;            
		stage.update();            
		stage.tickOnUpdate = true;		
	}
}
an.handleSoundStreamOnTick = function(event) {
	if(!event.paused){
		var stageChild = stage.getChildAt(0);
		if(!stageChild.paused || stageChild.ignorePause){
			stageChild.syncStreamSounds();
		}
	}
}
an.handleFilterCache = function(event) {
	if(!event.paused){
		var target = event.target;
		if(target){
			if(target.filterCacheList){
				for(var index = 0; index < target.filterCacheList.length ; index++){
					var cacheInst = target.filterCacheList[index];
					if((cacheInst.startFrame <= target.currentFrame) && (target.currentFrame <= cacheInst.endFrame)){
						cacheInst.instance.cache(cacheInst.x, cacheInst.y, cacheInst.w, cacheInst.h);
					}
				}
			}
		}
	}
}


})(createjs = createjs||{}, AdobeAn = AdobeAn||{});
var createjs, AdobeAn;